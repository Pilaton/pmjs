name: CI

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  packages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 21.x]
    steps:
      - uses: actions/checkout@main

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@main
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Run all tests (ci)
        run: pnpm run ci

  release-please-action:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@main
        id: release-action
        with:
          release-type: node
    outputs:
      is-release-created: ${{ steps.release-action.outputs.release_created }}

  release:
    needs: [release-please-action]
    if: ${{ needs.release-please-action.outputs.is-release-created == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: NPM
            registry: https://registry.npmjs.org/
            token-name: NPM_TOKEN
          - name: GitHub Packages
            registry: https://npm.pkg.github.com/
            token-name: GITHUB_TOKEN
    steps:
      - uses: actions/checkout@main

      - uses: actions/setup-node@main
        with:
          node-version: '20.x'
          registry-url: ${{ matrix.registry }}

      - name: Install pnpm
        uses: pnpm/action-setup@master
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install

      - name: Build package
        run: pnpm run build

      - name: Publish to ${{ matrix.name }}
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets[matrix.token-name] }}
          NPM_CONFIG_PROVENANCE: true
